  Look through each jar file one-by-one in an attempt to cluster as we go.
  
  Simplest approach could start by using file names (which for class files are the fqn followed by a .class)
  
  Building up clusters of jars with a certain level of similarity in the class file names.
  If we do it by a percentage, then there's the possibility that order matters. i.e. Clusters will look different depending on the order of the projects.
  Maybe not a problems, since I hope that clusters will be rather obvious.
  
  Split jars apart if they do not share a common fqn prefix.
  If a jar has more than 90% of its files contained in a component, consider it to be a member of the component.
  Maybe do something to split a component into sub-components after the fact?
  
  How to get this to scale to 1000s of jars?
  Use the file-system so the whole thing is resumable.
  for each cluster, store all the FQNs matched to the hashes of the jars they came from. 